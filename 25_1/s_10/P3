Array Size: 100 elements
Bad Sort: 2 ms
Quick Sort: 0 ms
Merge Sort: 1 ms  
Heap Sort: 0 ms

Array Size: 1000 elements
Bad Sort: 150 ms
Quick Sort: 2 ms
Merge Sort: 3 ms
Heap Sort: 2 ms

Array Size: 5000 elements
Bad Sort: 3800 ms
Quick Sort: 12 ms
Merge Sort: 15 ms
Heap Sort: 14 ms

Array Size: 10000 elements
Bad Sort: 15200 ms
Quick Sort: 25 ms
Merge Sort: 32 ms
Heap Sort: 30 ms

CONCLUSION:
Bad Sort becomes impractical for n > 1000
All O(n log n) algorithms perform well
Quick Sort generally fastest for random data
Heap Sort good when memory is constrained
Selection Sort is clearly inefficient for large arrays due to its O(nÂ²) time complexity
